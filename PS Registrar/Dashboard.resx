<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGyAAAAEAIAAoDgAAFgAAACgAAAAbAAAAQAAAAAEAIAAAAAAAgA0AABMLAAATCwAAAAAAAAAA
        AAD///8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4BAAAPAgEADwMBAw4CAQAJAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADAIBAAAAAAEYFxk+HyYrlBgWGC04SFEABgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA
        AAD///8AEAoJGyAoL3w7U2PmVHCG/zhPX9YcISZgDAMBECseHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAQAABQAABhMPECkiLDR2N0xb0VRp
        ev1uZm7/dk9K/2tncv9MYnP4MUNQxCErM3EVExUsBQAABwwCAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEgkGAA4AAAUYFxlGKDZAqD5UY+VYZXT+bGt3/3Jkav9waXP/cWNq/3Bq
        dP9xaHD/aWx5/1hldP5DWmvoLD5KrBocH0oKAAAGEAYFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWEREAEwoHDh8lKoU9VGXwYGl4/3JbXf9yZGr/b3B8/252hf9wZm//c1lb/3Bnb/9udYT/b3B8/3Jj
        af9zWFn/ZWdz/0VcbfImMTqNEAcEERUSEgAAAAAAAAAAAAAAAAAAAAAAAAAAABoXGAARBgIIICYsjkhf
        cfxwYmj/dFNR/29teP9vc4H/cWpz/3VNSP95Rjz/eEM4/3dEOv91TUj/cWpz/29zgP9vbnn/dFFO/3NY
        Wf9UZ3j9KjhClgsAAAoXExMAAAAAAAAAAAAAAAAAIiIjABwgJQAaGh1cQVdn9nFeYv90U1H/b3OB/29p
        cv+HbW3/nXlz/554cf+kgHr/n3p0/513cP+ed3D/n3x2/4drav9vanP/b3OC/3NSUP91Uk//UGV2+CEq
        MWAuQ1AAIiEkAAAAAAAAAAAAGxocAA8EARErOkXEZmZy/3ZFPP9vbnn/cGx3/3RLRv9+S0H/hVZN/513
        cP+ge3T/nXhx/596c/+Xb2f/gE9G/3tGPP90S0f/cGx3/29uef92Qzr/bWFo/zdNXMQKAAARGxocAAAA
        AAATExMAGhkbABYUFT9BVWXzdFJQ/3RPTP9udob/dFFO/3ZANv91QDb/eEM5/5RqYv+ifnb/oXx0/6F9
        df+GVkz/dkE2/3ZBNv92QDb/dFFO/252hv90T0z/dU5J/0tgcfEYGx47GxseAAAAAAABAQEAGx0gABsf
        JGJQX27/d0c//3RRTv91Uk7/d0E0/3ZBNv90QDn/cj8+/3VHTf+RcYH/iml7/4Vhcf9uQEr/cD9D/3I/
        Pf91QDf/d0E0/3VSTf90UU3/d0Y9/1VkdP4eJi1eHyQpAA0NDQAAAAIAHSElABwjKWdUYG7/dEVD/2s9
        S/9jPGP/Vzp//087mf9YSrD/SUC+/0dCyf9mYtL/Z2TU/1RR0v9UUM//QDvF/1pQu/9UQ6f/UTiM/1w5
        bf9nO1L/c0RE/1dicP8eJy5mICYsAAEAAQAAACIAGxseABsdHU04QoT5Rz66/1VS0/8xNN//LTLm/4qO
        8/+prPf/rbD3/4eL8v/Nz/r/hYnx/4yQ8v+rrfb/lZn0/66x+P+gpPb/a2/v/4qM7v9paNv/TES//zlC
        ifgcHyBJGx0gABEAEQAAAAAAGhkbABgWAh8gInfaP0Tn/8LE+f+DhvD/dHju/8vM+f9iZuz/trj2/7Gz
        9f+1t/b/KzDl/3x/7/+6vPb/xcf4/2hr7P9hZuv/pqn0/83P+f+WmfP/S1Dq/yAigNkYFgEdGhkcAAAA
        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
</value>
  </data>
</root>